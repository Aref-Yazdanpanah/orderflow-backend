# Generated by Django 5.2.7 on 2025-10-16 09:14

import django.core.validators
import django.utils.timezone
import orderflow.users.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="OTP",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("password", models.CharField(editable=False, max_length=8)),
                ("destination", models.CharField(editable=False, max_length=128)),
                ("is_used", models.BooleanField(default=False)),
                ("extra", models.JSONField(default=dict)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["destination", "is_used", "created_at"],
                        name="users_otp_destina_f9016c_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="users_otp_created_907e74_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        db_index=True,
                        error_messages={
                            "unique": "A user with that mobile already exists."
                        },
                        help_text="Local mobile number (e.g., 09121234567).",
                        max_length=11,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid mobile like 09121234567.",
                                regex="^09\\d{9}$",
                            )
                        ],
                        verbose_name="mobile",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=150, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=150, verbose_name="last name"),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("ADMIN", "Admin"), ("CUSTOMER", "Customer")],
                        db_index=True,
                        default="CUSTOMER",
                        max_length=20,
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="staff status"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "swappable": "AUTH_USER_MODEL",
                "indexes": [
                    models.Index(
                        fields=["username"], name="users_user_usernam_65d164_idx"
                    ),
                    models.Index(fields=["role"], name="users_user_role_36d76d_idx"),
                    models.Index(
                        fields=["is_active", "role"],
                        name="users_user_is_acti_a8c04a_idx",
                    ),
                ],
            },
            managers=[
                ("objects", orderflow.users.models.UserManager()),
            ],
        ),
    ]
